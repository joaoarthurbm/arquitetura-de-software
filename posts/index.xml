
   <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
     <channel>
       <title>Posts on Arquitetura de Software</title>
       <link>https://joaoarthurbm.github.io/arquitetura-de-software/posts/</link>
       <description>Recent content in Posts on Arquitetura de Software</description>
       <generator>Hugo -- gohugo.io</generator>
       <copyright>Copyright &amp;copy; 2020 - João Arthur Brunet</copyright>
       <lastBuildDate>Wed, 23 Oct 2019 00:00:00 -0300</lastBuildDate>
       
           <atom:link href="https://joaoarthurbm.github.io/arquitetura-de-software/posts/index.xml" rel="self" type="application/rss+xml" />
       
       
       <item>
         <title>OpenStack: Autenticação e Autorização</title>
         <link>https://joaoarthurbm.github.io/arquitetura-de-software/posts/openstack/</link>
         <pubDate>Wed, 23 Oct 2019 00:00:00 -0300</pubDate>
         
         <guid>https://joaoarthurbm.github.io/arquitetura-de-software/posts/openstack/</guid>
         <description>

&lt;hr /&gt;

&lt;p&gt;Neste bate-papo, &lt;strong&gt;Rodrigo Duarte&lt;/strong&gt; nos apresenta dois aspectos arquiteturais do OpenStack. Em primeiro lugar, a migração de monilito para microsserviços e, depois, a evolução do esquema de tokens para autenticação e autorização no OpenStack.&lt;/p&gt;

&lt;p&gt;É muito interessante a maneira como cada escolha tomada ao longo do tempo possui um tradeoff. Nós discutimos bastante a respeito desses tradeoffs, além de outros aspectos arquiteturais, como evolução de monolito para microsserviços, documentação arquitetural, avaliação das decisões e metodologia científica, além do papel do arquiteto.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;em&gt;Importante.&lt;/em&gt;&lt;/b&gt; O primeiro comentário do vídeo possui um índice, caso você queira pular direto para algum desses temas.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/PuCSjWzWRuQ&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;minhas-notas-com-traços-de-opiniões&#34;&gt;Minhas notas (com traços de opiniões)&lt;/h2&gt;

&lt;blockquote&gt; Arquitetura de software é um exercício constante de se perguntar &#34;E se?&#34; &lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;- E se a carga duplicar?
- E se esse serviço sair do ar?
- E se implantar na nuvem for caro?
- E se houver free-riders?
- E se as consultas demandarem muito processamento/memória?
- E se eu usar cache? E se houver inconsistência?
- E se a minha estratégia para melhorar o desempenho piorar 
o desempenho?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Decisões arquiteturais são transversais, firmes e de grande impacto.&lt;/p&gt;

&lt;p&gt;Toda decisão expõe um tradeoff.&lt;/p&gt;

&lt;p&gt;Migrar para microsserviços resolve muita coisa, mas também implica em uma nova gama de problemas e complexidade adicional.&lt;/p&gt;

&lt;p&gt;O modelo como as estratégias de tokens foram avaliadas foi &amp;ldquo;coloca para executar e monitora&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Rodrigo citou a importância de se avaliar com uma metodologia adequada. Em particular, é uma bandeira interna dele essa preocupação. Segundo ele, houve casos em que as conclusões não eram adequadas porque não se usou intervalo de confiação, por exemplo.&lt;/p&gt;

&lt;p&gt;Rodrigo citou que o &amp;ldquo;modelo de RFC&amp;rdquo; é usado para documentação arquitetural. Na prática, um documento colaborativo para discussão das decisões.&lt;/p&gt;

&lt;p&gt;O código tende a caminhar de maneira muito mais veloz do que a documentação.&lt;/p&gt;

&lt;p&gt;Chamei a atenção para o fato de que a descrição arquitetural deve se basear no conceito de visões. Isto é, para quem estou descrevendo? Aspectos diferentes e níveis de detalhes diferentes para diferentes stakeholders.&lt;/p&gt;

&lt;p&gt;Também chamei a atenção para manter a documentação arquitetural apenas com aspectos realmente importantes. Esconder detalhes desnecessários.&lt;/p&gt;

&lt;p&gt;Discutimos brevemente o conceito de walking architecture e truck-factor. Lembrei que é um problema que as decisões fiquem concentradas em apenas alguns membros. Rodrigo citou que isso acontece.&lt;/p&gt;

&lt;p&gt;Rodrigo lembrou que, gradativamente, foi percebendo que suas decisões não eram locais. Aliado ao fato de que em alguns momentos ele era &lt;em&gt;fullstack developer&lt;/em&gt;, esse cenário o fez &amp;ldquo;mais solidário&amp;rdquo;, uma vez que o impacto da mudança poderia afetar, por exemplo, a implantação e ele era quem também cuidava dessa etapa.&lt;/p&gt;
</description>
       </item>
       
       <item>
         <title>globo.com: Streaming via P2P</title>
         <link>https://joaoarthurbm.github.io/arquitetura-de-software/posts/globo/</link>
         <pubDate>Tue, 22 Oct 2019 00:00:00 -0300</pubDate>
         
         <guid>https://joaoarthurbm.github.io/arquitetura-de-software/posts/globo/</guid>
         <description>

&lt;hr /&gt;

&lt;p&gt;Neste encontro, Flávio Ribeiro fala sobre como aplicou o estilo arquitetural peer-to-peer (P2P) na globo.com para entregar streaming de melhor qualidade.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;em&gt;Importante.&lt;/em&gt;&lt;/b&gt; O primeiro comentário do vídeo possui um índice, caso você queira pular direto para algum desses temas.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/tJ_ns20SIaU&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;&lt;/p&gt;

&lt;h3 id=&#34;motivação-para-adotar-p2p&#34;&gt;Motivação para adotar P2P&lt;/h3&gt;

&lt;p&gt;São vários os bons momentos que podem ser extraídos dessa conversa. Em particular, gostei bastante do fato de que a motivação de Flávio teve relação com a falta de recursos (banda) na região em que morava. Ou seja, a decisão arquitetural foi tomada tendo como norte o requisito não-funcional latência e foi provocada pelo ambiente em que vivia.&lt;/p&gt;

&lt;p&gt;O sistema foi desenvolvido em forma de plugin para facilitar implantação, testes e experimentação.&lt;/p&gt;

&lt;h3 id=&#34;migração-de-monolito-para-componentes-plugin&#34;&gt;Migração de monolito para componentes/plugin&lt;/h3&gt;

&lt;p&gt;Também foi interessante o modo como ele remodelou o &lt;em&gt;player&lt;/em&gt; de vídeo da globo.com. A arquitetura inicial era monolito e foi migrada para o conceito de componentes/plugin (&lt;a class=&#34;external&#34; href=&#34;http://blog.flavioribeiro.com/clappr-an-extensible-media-player-for-the-web/&#34;&gt;clappr&lt;/a&gt;). Isso possibilitou a troca de ângulos nos jogos da Copa do Mundo de 2014 sem a necessidade de redesenhar todos os componentes na tela. Isso o player, suas funções e o local onde o vídeo é exibido são diferentes componentes.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;minhas-notas-com-traços-de-opiniões&#34;&gt;Minhas notas (com traços de opiniões)&lt;/h2&gt;

&lt;p&gt;&lt;b&gt;&lt;em&gt;Criatividade.&lt;/em&gt;&lt;/b&gt; O caso apresentado por Flávio me lembrou uma máxima: a ausência de recursos te faz criativo. Isso tem muita relação com arquitetura de software também. Fávio optou pelo estilo arquitetural P2P porque havia restrições de banda larga.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;em&gt;Melhoria na infraestrutura vs. Aumento no consumo de recursos dos software.&lt;/em&gt;&lt;/b&gt; Uma pergunta natural é: &amp;ldquo;a banda não melhorou significativamente ao longo do tempo?&amp;rdquo;. A resposta é: sim, mas o conteúdo passou a ser mais rico e exigir mais. Ou seja, a máxima &amp;ldquo;mais recursos computacionais não resolveram o problema&amp;rdquo;. O software precisou também resolver.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;em&gt;Arquitetura híbrida.&lt;/em&gt;&lt;/b&gt; Flávio optou por um modelo hierárquivo de P2P. Ou seja, há classes de nós dentro da rede. Nem todos estão no mesmo nível. Os pontos de presença, que possuem mais recursos, fazem parte da rede, mas estão em um nível acima dos &amp;ldquo;clientes finais&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;P2P foi uma estratégia adotada para aproveitar banda de pares &amp;ldquo;mais privilegiados&amp;rdquo; estão &amp;ldquo;disperdiçando&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;em&gt;Uma decisão traz um conjunto de preocupações.&lt;/em&gt;&lt;/b&gt; Decidir pelo estilo P2P trouxe preocupações adicionas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Como avaliar pares na rede? Fávio criou um esquema de pontuação para eleger pares com boas conexões.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Como fazer com que os pares não se aproveitem da rede para distribuir outro conteúdo?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A implementação também foi através de plugin para ter agilidade nos testes e implantação.&lt;/p&gt;

&lt;p&gt;Flávio conduziu experimentação para avaliar as decisões arquiteturais.&lt;/p&gt;

&lt;p&gt;Flávio também lembrou que é muito comum o modelo de RFC para documentação arquitetural.&lt;/p&gt;

&lt;p&gt;Houve uma discussão interessante sobre quem toma as decisões arquiteturais. Varia, mas é comum que toda a equipe discuta e que os desenvolvedores &amp;ldquo;mais&amp;rdquo; senior conduzam as discussões.&lt;/p&gt;
</description>
       </item>
       
     </channel>
   </rss>
